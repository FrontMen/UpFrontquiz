type Quiz {
  id: String!
  active: Boolean!
  currentQuestion: Int
  questions: [Question]!
}

type Question {
  question: String!
}

type Results {
  quizId: String!
  users: [User]
}

type User {
  id: String!
  name: String!
  timeLeft: Int!
  active: Boolean!
}

type UserState {
  player1: User
  player2: User
}

type Query {
  users: [User]!
}

type Mutation {
  join(name: String!): User
  startQuiz: Boolean
  answerQuestion(userId: String, answer: String): Boolean
  reset: Boolean
}

type Subscription {
  timer: Int
  quiz: Quiz
  users(userId: String): UserState
}
